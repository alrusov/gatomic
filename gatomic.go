package gatomic

import "sync"

//----------------------------------------------------------------------------------------------------------------------------//

type (
	V[T any] struct {
		mutex *sync.Mutex
		v     T
	}
)

//----------------------------------------------------------------------------------------------------------------------------//

func New[T any](v T) *V[T] {
	return &V[T]{
		mutex: new(sync.Mutex),
		v:     v,
	}
}

//----------------------------------------------------------------------------------------------------------------------------//

func Get[T any](a *V[T]) T {
	a.mutex.Lock()
	defer a.mutex.Unlock()

	return a.v
}

//----------------------------------------------------------------------------------------------------------------------------//

func Set[T any](a *V[T], v T) (old T) {
	a.mutex.Lock()
	defer a.mutex.Unlock()

	old = a.v
	a.v = v
	return
}

//----------------------------------------------------------------------------------------------------------------------------//
